#summary Overview of the research that has led to this project.

= Introduction =

Enterprise-scale software infrastructures fail embarassingly often and take a long time to recover. About 40% of the time, buggy application software is the culprit [Woo95,Gar02]; such failures cost the US economy $60 billion annually [NIST02]. The rate at which developers reduce the number of bugs per line of code (using improved tools, languages and training) is outpaced by the rate at which software grows. The overall number of bugs goes up, and bug-induced system failures continue being a certainty. Conceding that perfect software is just a myth, we focus on ways to recover fast when failures occur.

Microrecovery reduces the scope of recovery down to the fine grain of application components. Microreboot is an instance of microrecovery, in which we "reboot" at a fine grain and obtain improvements in availability of 1-2 orders of magnitude. Crash-only software is a design pattern for building microrebootable systems; it is centered around fine-grain componentization of systems and separation of application data from application logic. 

= Resources =

    * Getting started with JAGR ([GettingStarted_JAGR HTML])
    * Getting started with RR-JBoss ([GettingStarted_RR-JBoss HTML])
    * Getting started with RR-RUBiS ([GettingStarted_RR-Rubis HTML])
    * Getting started with RR-SSM ([GettingStarted_RR-SSM HTML])
    * Guide to installing RUBiS 1.4.1 on JBoss 3.2.1 ([Installing_Rubis_on_JBoss HTML])
    * Old Petstore 1.3.2 / JBoss 3.2.1 document ([Installing_Petstore_on_Rubis HTML])
    * The EJB Undeploy Mechanism in JBoss ([Undeploying_EJBs_in_JBoss HTML])

= Acknowledgments =

Our project is (and has been) made possible over the years by support from

  * EPFL
  * National Science Foundation (NSF)
  * National Aeronautics and Space Administration (NASA)
  * IBM Research
  * Microsoft Research
  * Stanford Networking Research Center (SNRC)
  * Advanced Computing Systems Association (USENIX)