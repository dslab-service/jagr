#summary Overview of the research that has led to this project.

= Introduction =

Enterprise-scale software infrastructures fail embarassingly often and take a long time to recover. About 40% of the time, buggy application software is the culprit [Woo95,Gar02]; such failures cost the US economy $60 billion annually [NIST02]. The rate at which developers reduce the number of bugs per line of code (using improved tools, languages and training) is outpaced by the rate at which software grows. The overall number of bugs goes up, and bug-induced system failures continue being a certainty. Conceding that perfect software is just a myth, we focus on ways to recover fast when failures occur.

Microrecovery reduces the scope of recovery down to the fine grain of application components. Microreboot is an instance of microrecovery, in which we "reboot" at a fine grain and obtain improvements in availability of 1-2 orders of magnitude. Crash-only software is a design pattern for building microrebootable systems; it is centered around fine-grain componentization of systems and separation of application data from application logic. 

= Key Papers =

 * [http://infoscience.epfl.ch/record/98376 Autonomous Recovery in Componentized Internet Applications]. George Candea, Emre Kıcıman, Shinichi Kawamoto, and Armando Fox.  _Cluster Computing Journal_, vol. 9, no. 1, February 2006
 * [http://infoscience.epfl.ch/getfile.py?recid=97213&mode=best Microreboot - A Technique for Cheap Recovery]. George Candea, Shinichi Kawamoto, Yuichi Fujiki, Greg Friedman, and Armando Fox. _6th Symposium on Operating Systems Design and Implementation (OSDI)_, December 2004
 * [http://research.microsoft.com/apps/pubs/default.aspx?id=75092 Detecting Application-Level Failures in Component-based Internet Services]. Emre Kıcıman and Armando Fox. _IEEE Transactions on Neural Networks_, Special Issue on Adaptive Learning Systems in Communication Networks, September 2005
 * [http://research.microsoft.com/apps/pubs/default.aspx?id=74738 Path-Based Failure and Evolution Management]. Mike Y. Chen, Anthony Accardi, Emre Kıcıman, Jim Lloyd, Dave Patterson, Armando Fox, and Eric Brewer. _USENIX/ACM Symposium on Networked Systems Design and Implementation (NSDI)_, March 2004
 * [http://research.microsoft.com/apps/pubs/default.aspx?id=74713 Session State: Beyond Soft State]. Benjamin C. Ling, Emre Kıcıman, and Armando Fox. _USENIX/ACM Symposium on Networked Systems Design and Implementation (NSDI)_, March 2004
 * [http://infoscience.epfl.ch/record/98456 Recursive Restartability: Turning the Reboot Sledgehammer into a Scalpel]. George Candea and Armando Fox. Workshop on Hot Topics in Operating Systems (HotOS), May 2001. 
 * [http://infoscience.epfl.ch/record/98461 Crash-Only Software]. George Candea and Armando Fox. _Workshop on Hot Topics in Operating Systems (HotOS)_, May 2003.
 * [http://infoscience.epfl.ch/record/98460 Automatic Failure-Path Inference: A Generic Introspection Technique for Internet Applications]. George Candea, Mauricio Delgado, Michael Chen, Armando Fox. _IEEE Workshop on Internet Applications (WIAPP)_, June 2003.
 * [http://infoscience.epfl.ch/record/98463 Recovery Oriented Computing: Building Multi-Tier Dependability]. George Candea, Aaron Brown, Armando Fox, and David Patterson. _IEEE Computer_, Vol. 37, No. 11, November 2004


= Resources =

    * Getting started with JAGR ([GettingStarted_JAGR HTML])
    * Getting started with RR-JBoss ([GettingStarted_RR-JBoss HTML])
    * Getting started with RR-RUBiS ([GettingStarted_RR-Rubis HTML])
    * Getting started with RR-SSM ([GettingStarted_RR-SSM HTML])
    * Guide to installing RUBiS 1.4.1 on JBoss 3.2.1 ([Installing_Rubis_on_JBoss HTML])
    * Old Petstore 1.3.2 / JBoss 3.2.1 document ([Installing_Petstore_on_Rubis HTML])
    * The EJB Undeploy Mechanism in JBoss ([Undeploying_EJBs_in_JBoss HTML])

= Acknowledgments =

Our project is (and has been) made possible over the years by support from

  * EPFL
  * National Science Foundation (NSF)
  * National Aeronautics and Space Administration (NASA)
  * IBM Research
  * Microsoft Research
  * Stanford Networking Research Center (SNRC)
  * Advanced Computing Systems Association (USENIX)